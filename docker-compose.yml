version: '3.3'

services:

  faker:
    build: 
      context: ./faker/
    depends_on: 
      - nginx

  nginx:
    build:
      context: ./nginx/
      args:
        NGINX_VERSION: $NGINX_VERSION
        FILEBEAT_VERSION: $FILEBEAT_VERSION
    expose:
      - '80'
    volumes:
      - ./nginx/config/nginx.conf:/etc/nginx/conf.d/default.conf
      # - ./nginx/config/filebeat.yml:/etc/filebeat/filebeat.yml
      # - ./nginx/config/filebeat-nginx.yml:/etc/filebeat/modules.d/nginx.yml
    ports:
      - '80:80'
    depends_on: 
      - logstash
      - kibana
    deploy:
      restart_policy:
        condition: always
        delay: 5s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '10'

  elasticsearch:
    build:
      context: ./elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      ES_JAVA_OPTS: '-Xmx256m -Xms256m'
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node

  logstash:
    build:
      context: ./logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - '5044:5044'
      - '5555:5000/tcp'
      - '5555:5000/udp'
      - '9600:9600'
    environment:
      LS_JAVA_OPTS: '-Xmx256m -Xms256m'
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: ./kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - '5601:5601'
    depends_on:
      - elasticsearch

volumes:
  elasticsearch:
